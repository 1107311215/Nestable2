{"name":"Nestable","tagline":"New pickup of Nestable!","body":"Nestable\r\n========\r\n\r\n## PLEASE NOTE\r\n\r\n~~I cannot provide any support or guidance beyond this README. If this code helps you that's great but I have no plans to develop Nestable beyond this demo (it's not a final product and has limited functionality). I cannot reply to any requests for help.~~.\r\n\r\n**I'm picking up active developement for Nestable! Pull requests are welcome!**\r\n\r\n* * *\r\n\r\n### Drag & drop hierarchical list with mouse and touch compatibility (jQuery / Zepto plugin)\r\n\r\n[**Try Nestable Demo**](http://RamonSmit.github.com/Nestable/)\r\n\r\nNestable is an experimental example and IS under active development. If it suits your requirements feel free to expand upon it!\r\n\r\n## Usage\r\n\r\nWrite your nested HTML lists like so:\r\n\r\n    <div class=\"dd\">\r\n        <ol class=\"dd-list\">\r\n            <li class=\"dd-item\" data-id=\"1\">\r\n                <div class=\"dd-handle\">Item 1</div>\r\n            </li>\r\n            <li class=\"dd-item\" data-id=\"2\">\r\n                <div class=\"dd-handle\">Item 2</div>\r\n            </li>\r\n            <li class=\"dd-item\" data-id=\"3\">\r\n                <div class=\"dd-handle\">Item 3</div>\r\n                <ol class=\"dd-list\">\r\n                    <li class=\"dd-item\" data-id=\"4\">\r\n                        <div class=\"dd-handle\">Item 4</div>\r\n                    </li>\r\n                    <li class=\"dd-item\" data-id=\"5\">\r\n                        <div class=\"dd-handle\">Item 5</div>\r\n                    </li>\r\n                </ol>\r\n            </li>\r\n        </ol>\r\n    </div>\r\n\r\nThen activate with jQuery like so:\r\n\r\n    $('.dd').nestable({ /* config options */ });\r\n\r\n### Events\r\n\r\nThis `onChange` event is writen by: Douwe de Haan (http://github.com/SerendipityNL)\r\nThe `change` event is deprecated by now.\r\n~~~\r\n\t$('.dd').nestable({\r\n\t\tmaxDepth : 30,\r\n\t\tonChange: function($this, $dragEl, $el){\r\n\t\t\t// Change event\r\n\t\t\t// $this : full function\r\n\t\t\t// $dragEl : dragged element\r\n\t\t\t// $el : full element\r\n\t\t}\r\n\t});\r\n~~~\r\n### Methods\r\n\r\nYou can get a serialised object with all `data-*` attributes for each item.\r\n\r\n    $('.dd').nestable('serialize');\r\n\r\nThe serialised JSON for the example above would be:\r\n\r\n    [{\"id\":1},{\"id\":2},{\"id\":3,\"children\":[{\"id\":4},{\"id\":5}]}]\r\n\r\n### On the fly nestable generation\r\n\t<div class=\"dd\" id=\"nestable3\">\r\n\t\t<ol class='dd-list dd3-list'>\r\n\t\t\t<div id=\"dd-empty-placeholder\"></div>\r\n\t\t</ol>\r\n    </div>\r\n\t\r\n\t<script>\r\n\t$(document).ready(function(){ \r\n\t\tvar obj = '[{\"id\":1},{\"id\":2},{\"id\":3,\"children\":[{\"id\":4},{\"id\":5}]}]';\r\n\t\tvar output = '';\r\n\t\tfunction buildItem(item) {\r\n\t\t\r\n\t\t    var html = \"<li class='dd-item' data-id='\" + item.id + \"'>\";\r\n\t\t    html += \"<div class='dd-handle'>\" + item.id + \"</div>\";\r\n\t\t\r\n\t\t    if (item.children) {\r\n\t\t\r\n\t\t        html += \"<ol class='dd-list'>\";\r\n\t\t        $.each(item.children, function (index, sub) {\r\n\t\t            html += buildItem(sub);\r\n\t\t        });\r\n\t\t        html += \"</ol>\";\r\n\t\t\r\n\t\t    }\r\n\t\t\r\n\t\t    html += \"</li>\";\r\n\t\t\r\n\t\t    return html;\r\n\t\t}\r\n\t\t\r\n\t\t$.each(JSON.parse(obj), function (index, item) {\r\n\t\t\r\n\t\t    output += buildItem(item);\r\n\t\t\r\n\t\t});\r\n\t\t\r\n\t\t$('#dd-empty-placeholder').html(output);\r\n\t\t$('#nestable3').nestable();\r\n\t});\r\n\t</script>\r\n\t\r\n### Configuration\r\nYou can change the follow options:\r\n\r\n* `maxDepth` number of levels an item can be nested (default `5`)\r\n* `group` group ID to allow dragging between lists (default `0`)\r\n\r\nThese advanced config options are also available:\r\n\r\n* `listNodeName` The HTML element to create for lists (default `'ol'`)\r\n* `itemNodeName` The HTML element to create for list items (default `'li'`)\r\n* `rootClass` The class of the root element `.nestable()` was used on (default `'dd'`)\r\n* `listClass` The class of all list elements (default `'dd-list'`)\r\n* `itemClass` The class of all list item elements (default `'dd-item'`)\r\n* `dragClass` The class applied to the list element that is being dragged (default `'dd-dragel'`)\r\n* `handleClass` The class of the content element inside each list item (default `'dd-handle'`)\r\n* `collapsedClass` The class applied to lists that have been collapsed (default `'dd-collapsed'`)\r\n* `placeClass` The class of the placeholder element (default `'dd-placeholder'`)\r\n* `emptyClass` The class used for empty list placeholder elements (default `'dd-empty'`)\r\n* `expandBtnHTML` The HTML text used to generate a list item expand button (default `'<button data-action=\"expand\">Expand></button>'`)\r\n* `collapseBtnHTML` The HTML text used to generate a list item collapse button (default `'<button data-action=\"collapse\">Collapse</button>'`)\r\n\r\n**Inspect the [Nestable Demo](http://ramonsmit.github.io/Nestable/) for guidance.**\r\n\r\n## Change Log\r\n\r\n### 7th April 2014\r\n\r\n* New pickup of repo for developement. \r\n\r\n### 15th October 2012\r\n\r\n* Merge for Zepto.js support\r\n* Merge fix for remove/detach items\r\n\r\n### 27th June 2012\r\n\r\n* Added `maxDepth` option (default to 5)\r\n* Added empty placeholder\r\n* Updated CSS class structure with options for `listClass` and `itemClass`.\r\n* Fixed to allow drag and drop between multiple Nestable instances (off by default).\r\n* Added `group` option to enabled the above.\r\n\r\n* * *\r\n\r\nOriginal Author: David Bushell [http://dbushell.com](http://dbushell.com/) [@dbushell](http://twitter.com/dbushell/)\r\nNew Author     : Ramon Smit    [http://ramonsmit.nl](http://ramonsmit.nl) [@Ram0nSm1t](https://twitter.com/Ram0nSm1t/)\r\n\r\nCopyright © 2012 David Bushell / © Ramon Smit 2014 | BSD & MIT license\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}